{"version":3,"sources":["Components/AboutPage/AboutPage.jsx","Components/LaundryEntryCreationPage/LaundryEntryCreationPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["AboutPage","githubProfileData","username","useState","profileData","setProfileData","useEffect","Octokit","auth","request","then","response","data","console","log","name","bio","company","avatarUrl","avatar_url","useGithubData","Title","Paragraph","level","src","alt","style","height","width","Link","href","Typography","LaundryEntryCreationPage","props","onFormFinish","values","entryDate","toString","setState","fillStatus","state","undefined","start","moment","seconds","remainder","minute","timePickerOptions","minuteStep","format","defaultValue","add","labelCol","span","wrapperCol","initialValues","remember","scrollToFirstError","onFinish","this","Item","label","rules","required","message","showTime","disabledDate","offset","type","htmlType","current","subtract","React","Component","Header","Layout","Content","Footer","App","selectedMenuKeys","location","pathname","position","zIndex","theme","mode","defaultSelectedKeys","selectedKeys","to","padding","marginTop","className","path","textAlign","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f8927b4.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Typography} from 'antd';\r\nimport {Octokit} from '@octokit/core';\r\n\r\nexport function AboutPage() {\r\n    const githubProfileData = useGithubData('dshuran');\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title>О нас</Typography.Title>\r\n            <Typography.Paragraph>\r\n                Дмитрий. Работаю фронтэнд-разработчиком в компании 1С. Веду курс по разработке\r\n                на React, занимаюсь своими проектами.\r\n            </Typography.Paragraph>\r\n            <Typography.Title level={2}>Данные моего github-профиля</Typography.Title>\r\n            <Typography.Paragraph>\r\n                <ul>\r\n                    <li>Имя из моего гитхаб профиля: {githubProfileData.name}</li>\r\n                    <li>Описание моего профиля: {githubProfileData.bio}</li>\r\n                    <li>Компания: {githubProfileData.company}</li>\r\n                    <li>Аватарка:</li>\r\n                    <img src={githubProfileData.avatarUrl} alt='Avatar' style={{height: '200px', width: '200px'}}/>\r\n                </ul>\r\n            </Typography.Paragraph>\r\n            <Typography.Title level={2}>Курс по React</Typography.Title>\r\n            <Typography.Paragraph>\r\n                <ul>\r\n                    <li><Typography.Link href='https://disk.yandex.ru/d/mqWIfmJtUUhXIQ'>Презентации занятий</Typography.Link></li>\r\n                </ul>\r\n                <ul>\r\n                    <li><Typography.Link href='https://disk.yandex.ru/d/7GFW9EDvQll6SA'>Записи занятий</Typography.Link></li>\r\n                </ul>\r\n                <ul>\r\n                    <li><Typography.Link href='https://meet.jit.si/MIPT_Front'>Ссылка на встречу с занятиями</Typography.Link></li>\r\n                </ul>\r\n                <ul>\r\n                    <li><Typography.Link href='https://docs.google.com/spreadsheets/d/1Hcl25hsABJJbFPxG8CiSgZcLxXDTShH2yZEwc0brzOo/edit?usp=sharing'>Таблица с оценками</Typography.Link></li>\r\n                </ul>\r\n            </Typography.Paragraph>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction useGithubData(username) {\r\n    let [profileData, setProfileData] = useState({})\r\n\r\n    useEffect(() => {\r\n        const octokit = new Octokit({auth: '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'})\r\n        octokit.request('GET /users/{username}', {\r\n            username: username\r\n        }).then((response) => {\r\n            let data = response.data;\r\n            console.log('there');\r\n            setProfileData({\r\n                name: data.name,\r\n                bio: data.bio,\r\n                company: data.company,\r\n                avatarUrl: data.avatar_url\r\n            })\r\n        })\r\n    }, [username])\r\n\r\n    return profileData;\r\n}\r\n","import React from 'react';\r\nimport {DatePicker, Typography} from \"antd\";\r\nimport { Form, Input, Button } from 'antd';\r\nimport moment from \"moment\";\r\n\r\nconst {Title, Paragraph} = Typography;\r\n\r\nexport class LaundryEntryCreationPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fillStatus: undefined,\r\n            entryDate: undefined\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const start = moment().seconds(0);\r\n        const remainder = 30 - (start.minute() % 30);\r\n\r\n        const dateTime = moment(start).add(remainder, \"minutes\")\r\n\r\n        const timePickerOptions = {\r\n            minuteStep: 30,\r\n            format: 'HH:mm',\r\n            defaultValue: dateTime\r\n        }\r\n\r\n        return (\r\n            <div style={{width: '800px'}}>\r\n                <Title>\r\n                    Записаться на стирку\r\n                </Title>\r\n                <Paragraph>\r\n                    Привет! Здесь ты можешь записаться в самую лучшую прачечную :)\r\n                </Paragraph>\r\n                <Form\r\n                    name='laundry'\r\n                    labelCol={{ span: 4 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    scrollToFirstError\r\n                    onFinish={this.onFormFinish}\r\n                >\r\n                    <Form.Item\r\n                        name='username'\r\n                        label='Ваше имя'\r\n                        rules={[{ required: true, message: 'Пожалуйста, введите имя!' }]}\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name='entry-date'\r\n                        label='Выберите время'\r\n                        rules={[{ required: true, message: 'Пожалуйста, выберите время для записи!' }]}\r\n                    >\r\n                        <DatePicker\r\n                            showTime={timePickerOptions}\r\n                            disabledDate={this.disabledDate}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\r\n                        <Button type='primary' htmlType='submit'>\r\n                            Записаться!\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                { this.state.fillStatus === 'success' &&\r\n                    <Paragraph>Вы успешно записались на {this.state.entryDate}</Paragraph>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current <= moment().subtract(1, 'days');\r\n    }\r\n\r\n    onFormFinish = (values) => {\r\n        let entryDate = values['entry-date'].toString();\r\n        this.setState({\r\n            fillStatus: 'success',\r\n            entryDate: entryDate\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Layout, Menu } from \"antd\";\r\nimport {Switch, Route, Link, withRouter} from \"react-router-dom\";\r\nimport {AboutPage} from \"./Components/AboutPage/AboutPage\";\r\nimport {LaundryEntryCreationPage} from \"./Components/LaundryEntryCreationPage/LaundryEntryCreationPage\";\r\n\r\nconst {Header, Content, Footer} = Layout;\r\n\r\nexport class App extends React.Component {\r\n\r\n    render() {\r\n        let selectedMenuKeys;\r\n        if (this.props.location.pathname === '/') {\r\n            selectedMenuKeys = ['1'];\r\n        } else {\r\n            selectedMenuKeys = ['2'];\r\n        }\r\n\r\n        return (\r\n            <Layout>\r\n                <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} selectedKeys={selectedMenuKeys}>\r\n                        <Menu.Item key=\"1\">\r\n                            <Link to='/'>Главная</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <Link to='/about'>О нас</Link>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Header>\r\n                <Content style={{ padding: '0 50px', marginTop: 64 }}>\r\n                    <div className='content-container'>\r\n                        <Switch>\r\n                            <Route path='/about'>\r\n                                <AboutPage/>\r\n                            </Route>\r\n                            <Route path='/'>\r\n                                <LaundryEntryCreationPage/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Создано Дмитрием Шураном. <a href='https://t.me/dshuran'>Связаться со мной</a></Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/main.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n          <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}